{
  ⟦
    org ↦ ⟦
      eolang ↦ ⟦
        i64 ↦ ⟦
          as-bytes ↦ ∅,
          φ ↦ ξ.as-bytes,
          as-i64 ↦ ξ,
          neg ↦ ξ.times(
            α0 ↦ Φ.org.eolang.number(
              α0 ↦ Φ.org.eolang.bytes(
                Δ ⤍ BF-F0-00-00-00-00-00-00
              )
            ).as-i64
          ),
          as-i16 ↦ ξ.as-i32.as-i16,
          as-i32 ↦ ⟦
            left ↦ ξ.ρ.as-bytes.slice(
              α0 ↦ Φ.org.eolang.number(
                α0 ↦ Φ.org.eolang.bytes(
                  Δ ⤍ 00-00-00-00-00-00-00-00
                )
              ),
              α1 ↦ Φ.org.eolang.number(
                α0 ↦ Φ.org.eolang.bytes(
                  Δ ⤍ 40-10-00-00-00-00-00-00
                )
              )
            ).as-bytes,
            φ ↦ ξ.left.eq(
              α0 ↦ Φ.org.eolang.bytes(
                Δ ⤍ 00-00-00-00
              )
            ).or(
              α0 ↦ ξ.left.eq(
                α0 ↦ Φ.org.eolang.bytes(
                  Δ ⤍ FF-FF-FF-FF
                )
              )
            ).if(
              α0 ↦ Φ.org.eolang.i32(
                α0 ↦ ξ.ρ.as-bytes.slice(
                  α0 ↦ Φ.org.eolang.number(
                    α0 ↦ Φ.org.eolang.bytes(
                      Δ ⤍ 40-10-00-00-00-00-00-00
                    )
                  ),
                  α1 ↦ Φ.org.eolang.number(
                    α0 ↦ Φ.org.eolang.bytes(
                      Δ ⤍ 40-10-00-00-00-00-00-00
                    )
                  )
                )
              ),
              α1 ↦ Φ.org.eolang.error(
                α0 ↦ Φ.org.eolang.txt.sprintf(
                  α0 ↦ Φ.org.eolang.string(
                    α0 ↦ Φ.org.eolang.bytes(
                      Δ ⤍ 43-61-6E-27-74-20-63-6F-6E-76-65-72-74-20-69-36-34-20-6E-75-6D-62-65-72-20-25-64-20-74-6F-20-69-33-32-20-62-65-63-61-75-73-65-20-69-74-27-73-20-6F-75-74-20-6F-66-20-69-33-32-20-62-6F-75-6E-64-73
                    )
                  ),
                  α1 ↦ Φ.org.eolang.tuple(
                    α0 ↦ Φ.org.eolang.tuple.empty,
                    α1 ↦ ξ.ρ.as-number
                  )
                )
              )
            )
          ⟧,
          as-number ↦ ⟦
            λ ⤍ Lorg_eolang_i64_as_number
          ⟧,
          lt ↦ ⟦
            x ↦ ∅,
            value ↦ Φ.org.eolang.dataized(
              α0 ↦ ξ.x
            ).as-bytes,
            φ ↦ Φ.org.eolang.number(
              α0 ↦ Φ.org.eolang.bytes(
                Δ ⤍ 00-00-00-00-00-00-00-00
              )
            ).as-i64.gt(
              α0 ↦ ξ.ρ.minus(
                α0 ↦ ξ.ρ.ρ.i64(
                  α0 ↦ ξ.value
                )
              )
            )
          ⟧,
          lte ↦ ⟦
            x ↦ ∅,
            value ↦ Φ.org.eolang.dataized(
              α0 ↦ ξ.x
            ).as-bytes,
            φ ↦ ξ.ρ.lt(
              α0 ↦ ξ.value
            ).or(
              α0 ↦ ξ.ρ.eq(
                α0 ↦ ξ.value
              )
            )
          ⟧,
          gt ↦ ⟦
            λ ⤍ Lorg_eolang_i64_gt,
            x ↦ ∅
          ⟧,
          gte ↦ ⟦
            x ↦ ∅,
            value ↦ Φ.org.eolang.dataized(
              α0 ↦ ξ.x
            ).as-bytes,
            φ ↦ ξ.ρ.gt(
              α0 ↦ ξ.value
            ).or(
              α0 ↦ ξ.ρ.eq(
                α0 ↦ ξ.value
              )
            )
          ⟧,
          times ↦ ⟦
            λ ⤍ Lorg_eolang_i64_times,
            x ↦ ∅
          ⟧,
          plus ↦ ⟦
            λ ⤍ Lorg_eolang_i64_plus,
            x ↦ ∅
          ⟧,
          minus ↦ ⟦
            x ↦ ∅,
            value ↦ Φ.org.eolang.dataized(
              α0 ↦ ξ.x
            ).as-bytes,
            φ ↦ ξ.ρ.plus(
              α0 ↦ ξ.ρ.ρ.i64(
                α0 ↦ ξ.value
              ).neg
            )
          ⟧,
          div ↦ ⟦
            λ ⤍ Lorg_eolang_i64_div,
            x ↦ ∅
          ⟧
        ⟧,
        λ ⤍ Package
      ⟧,
      λ ⤍ Package
    ⟧
  ⟧
}