{
  ⟦
    org ↦ ⟦
      eolang ↦ ⟦
        heap ↦ ⟦
          size ↦ ∅,
          malloc ↦ ⟦
            s ↦ ∅,
            next ↦ Φ.org.eolang.memory(
              α0 ↦ Φ.org.eolang.int(
                α0 ↦ Φ.org.eolang.bytes(
                  Δ ⤍ 00-00-00-00-00-00-00-00
                )
              )
            ),
            new-next ↦ ξ.s.plus(
              α0 ↦ ξ.ρ.malloc.next.as-int
            ),
            φ ↦ ξ.new-next.gt(
              α0 ↦ ξ.σ.size
            ).if(
              α0 ↦ Φ.org.eolang.error(
                α0 ↦ Φ.org.eolang.string(
                  α0 ↦ Φ.org.eolang.bytes(
                    Δ ⤍ 41-6C-6C-6F-63-61-74-69-6F-6E-20-66-61-69-6C-65-64-3A-20-62-61-64-20-61-6C-6C-6F-63-20-28-6E-6F-74-20-65-6E-6F-75-67-68-20-6D-65-6D-6F-72-79-20-69-6E-20-74-68-65-20-68-65-61-70-29
                  )
                )
              ),
              α1 ↦ Φ.org.eolang.seq(
                α0 ↦ Φ.org.eolang.tuple(
                  α0 ↦ Φ.org.eolang.tuple(
                    α0 ↦ Φ.org.eolang.tuple.empty,
                    α1 ↦ ξ.ρ.malloc.next.write(
                      α0 ↦ ξ.new-next
                    )
                  ),
                  α1 ↦ Φ.org.eolang.int(
                    α0 ↦ Φ.org.eolang.bytes(
                      Δ ⤍ 00-00-00-00-00-00-00-00
                    )
                  ).plus(
                    α0 ↦ ξ.ρ.malloc.next.as-int
                  )
                )
              )
            )
          ⟧,
          free ↦ ⟦
            p ↦ ∅,
            φ ↦ Φ.org.eolang.seq(
              α0 ↦ Φ.org.eolang.tuple(
                α0 ↦ Φ.org.eolang.tuple(
                  α0 ↦ Φ.org.eolang.tuple.empty,
                  α1 ↦ ξ.p
                ),
                α1 ↦ Φ.org.eolang.bool(
                  α0 ↦ Φ.org.eolang.bytes(
                    Δ ⤍ 01-
                  )
                )
              )
            )
          ⟧,
          pointer ↦ ⟦
            address ↦ ∅,
            length ↦ ∅,
            φ ↦ ξ.address,
            add ↦ ⟦
              x ↦ ∅,
              φ ↦ ξ.σ.ρ.pointer(
                α0 ↦ ξ.σ.address.plus(
                  α0 ↦ ξ.σ.length.times(
                    α0 ↦ ξ.x
                  )
                ),
                α1 ↦ ξ.σ.length
              )
            ⟧,
            sub ↦ ⟦
              x ↦ ∅,
              φ ↦ ξ.σ.add(
                α0 ↦ ξ.x.times(
                  α0 ↦ Φ.org.eolang.int(
                    α0 ↦ Φ.org.eolang.bytes(
                      Δ ⤍ FF-FF-FF-FF-FF-FF-FF-FF
                    )
                  )
                )
              )
            ⟧,
            block ↦ ⟦
              λ ⤍ Lambda,
              len ↦ ∅,
              inverse ↦ ∅
            ⟧
          ⟧
        ⟧,
        λ ⤍ Package
      ⟧,
      λ ⤍ Package
    ⟧
  ⟧
}
