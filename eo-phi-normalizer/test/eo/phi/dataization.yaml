title: Dataization tests
tests:
  - name: "Celsius example"
    dependencies:
      - ./data/0.38.0/org/eolang/float.phi
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        c ↦ Φ.org.eolang.float(
          as-bytes ↦ Φ.org.eolang.bytes(Δ ⤍ 40-39-00-00-00-00-00-00)
        ), // 25.0
        φ ↦ ξ.c.times(x ↦ ⟦ Δ ⤍ 3F-FC-CC-CC-CC-CC-CC-CD ⟧)  // 1.8
              .plus(x ↦ ⟦ Δ ⤍ 40-40-00-00-00-00-00-00 ⟧), // 32.0
      ⟧}
    output:
      bytes: "40-53-40-00-00-00-00-00" # 77.0

  - name: "Equality of booleans (via equality of bytes)"
    dependencies:
      - ./data/0.38.0/org/eolang/bytes.phi
      - ./data/0.38.0/org/eolang/true.phi
      - ./data/0.38.0/org/eolang/false.phi
    input: |
      {⟦ φ ↦ Φ.org.eolang.true.eq(α0 ↦ Φ.org.eolang.true) ⟧}
    output:
      bytes: "01-"

  - name: "Program with ξ.ρ.ρ"
    dependencies: []
    input: |
      {⟦ x ↦ ⟦ b ↦ ⟦ Δ ⤍ 01- ⟧, φ ↦ ⟦ b ↦ ⟦ Δ ⤍ 02- ⟧, c ↦ ⟦ a ↦ ξ.ρ.ρ.b, ρ ↦ ∅ ⟧.a, ρ ↦ ∅ ⟧.c, ρ ↦ ∅ ⟧.φ, λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ x ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  - name: "Preprocessing and dispatch"
    dependencies: []
    input: |
      {⟦ a ↦ ⟦ b ↦ ⟦ Δ ⤍ 01- ⟧ ⟧.b , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ a ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  - name: "New values in copy through ξ"
    dependencies: []
    input: |
      {⟦ a ↦ ⟦ b ↦ ∅, c ↦ ξ.b ⟧, d ↦ ξ.a(b ↦ ⟦ Δ ⤍ 01- ⟧).c , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ a ↦ ⟦ b ↦ ∅, c ↦ ξ.b ⟧, d ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  - name: "ρ-applications and stacked dispatches"
    dependencies: []
    input: |
      {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ⟦ c ↦ ⟦ Δ ⤍ 01- ⟧ ⟧ ⟧ ⟧.a.b.c , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ x ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  - name: "ρ-applications and immediate dispatches"
    dependencies: []
    input: |
      {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ⟦ c ↦ ⟦ Δ ⤍ 01- ⟧ ⟧.c ⟧.b ⟧.a , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ x ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  - name: "new values in copy through ρ"
    dependencies: []
    input: |
      {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.c ⟧.b, c ↦ ∅ ⟧, d ↦ ξ.x(c ↦ ⟦ Δ ⤍ 01- ⟧).a , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.c ⟧.b, c ↦ ∅ ⟧, d ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  - name: "ρ and nested dispatches"
    dependencies: []
    input: |
      {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ⟦ c ↦ ξ.ρ ⟧.c ⟧.b ⟧.a , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ x ↦ ⟦ b ↦ ⟦ c ↦ ξ.ρ ⟧.ρ, ρ ↦ ⟦ a ↦ ⟦ b ↦ ⟦ c ↦ ξ.ρ ⟧.c ⟧.b ⟧ ⟧, λ ⤍ Package ⟧

  - name: "usage of Φ with a loop"
    dependencies: []
    input: |
      {⟦ a ↦ ⟦ b ↦ Φ.a ⟧ , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ a ↦ ⟦ b ↦ Φ.a ⟧, λ ⤍ Package ⟧

  - name: "ρ passed to both term of object application?"
    dependencies: []
    input: |
      {⟦ x ↦ ⟦ c ↦ ⟦ a ↦ ∅ ⟧ (a ↦ ⟦ d ↦ ξ.ρ ⟧) ⟧.c , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ x ↦ ⟦
            a ↦ ⟦
              d ↦ ξ.ρ,
              ρ ↦ ⟦ c ↦ ⟦ a ↦ ∅ ⟧(a ↦ ⟦ d ↦ ξ.ρ ⟧) ⟧
            ⟧,
            ρ ↦ ⟦ c ↦ ⟦ a ↦ ∅ ⟧(a ↦ ⟦ d ↦ ξ.ρ ⟧) ⟧
          ⟧,
          λ ⤍ Package
        ⟧

  - name: "Object with ξ.ρ is an argument in application"
    dependencies: []
    input: |
      {⟦
        a ↦ ⟦ b ↦ ∅, x ↦ ⟦ Δ ⤍ 01- ⟧ ⟧ (b ↦ ⟦ c ↦ ξ.ρ.x ⟧ ).b.c,
        x ↦ ⟦ Δ ⤍ 02- ⟧,
        λ ⤍ Package
      ⟧}
    output:
      object: |
        ⟦ a ↦ ⟦ Δ ⤍ 02- ⟧, x ↦ ⟦ Δ ⤍ 02- ⟧, λ ⤍ Package ⟧

  - name: "ξ in application"
    dependencies: []
    input: |
      {⟦ x ↦ ⟦ a ↦ ∅ ⟧(a ↦ ξ.b), b ↦ ⟦ Δ ⤍ 01- ⟧ , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ x ↦ ⟦
            a ↦ ⟦
              Δ ⤍ 01-,
              ρ ↦ ⟦
                b ↦ ⟦ Δ ⤍ 01- ⟧,
                x ↦ ⟦ a ↦ ∅ ⟧ (a ↦ ξ.b),
                λ ⤍ Package
              ⟧
            ⟧
          ⟧,
          b ↦ ⟦ Δ ⤍ 01- ⟧,
          λ ⤍ Package
        ⟧

  - name: "ξ chain"
    dependencies: []
    input: |
      {⟦ a ↦ ξ.b, b ↦ ξ.c, c ↦ ξ.d, d ↦ ⟦ Δ ⤍ 01- ⟧ , λ ⤍ Package ⟧}
    output:
      object: |
        ⟦ a ↦ ⟦ Δ ⤍ 01- ⟧, b ↦ ⟦ Δ ⤍ 01- ⟧, c ↦ ⟦ Δ ⤍ 01- ⟧, d ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  # FIXME: fails
  # - name: "cross-reference (1)"
  #   dependencies: []
  #   input: |
  #     {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.d.e, c ↦ ⟦ Δ ⤍ 01- ⟧, ρ ↦ ∅ ⟧, d ↦ ⟦ e ↦ ξ.ρ.a.c, ρ ↦ ∅ ⟧, ρ ↦ ∅ ⟧.a.b , λ ⤍ Package ⟧}
  #   output:
  #     object: |
  #       NOT ⟦ x ↦ ⊥, λ ⤍ Package ⟧

  # FIXME: fails
  # - name: "cross-reference (2)"
  #   dependencies: []
  #   input: |
  #     {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.d.e, c ↦ ξ.ρ.d.f ⟧, d ↦ ⟦ e ↦ ξ.ρ.a.c, f ↦ ⟦ Δ ⤍ 01- ⟧ ⟧ ⟧.a.b , λ ⤍ Package ⟧}
  #   output:
  #     object: |
  #       NOT ⟦ x ↦ ⊥, λ ⤍ Package ⟧

  # FIXME: fails
  # - name: "cross-reference + dispatch (1)"
  #   dependencies: []
  #   input: |
  #     {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.d, c ↦ ⟦ Δ ⤍ 01- ⟧ ⟧, d ↦ ⟦ e ↦ ξ.ρ.a.c ⟧ ⟧.a.b.e , λ ⤍ Package ⟧}
  #   output:
  #     object: |
  #       NOT ⟦ x ↦ ⊥, λ ⤍ Package ⟧

  # FIXME: fails
  # - name: "cross-reference + dispatch (1)"
  #   dependencies: []
  #   input: |
  #     {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.d, c ↦ ⟦ Δ ⤍ 01- ⟧ ⟧, d ↦ ⟦ e ↦ ξ.ρ.a.c ⟧ ⟧.a.b.e , λ ⤍ Package ⟧}
  #   output:
  #     object: |
  #       NOT ⟦ x ↦ ⊥, λ ⤍ Package ⟧

  # FIXME: fails
  # - name: "cross-reference + dispatch (2)"
  #   dependencies: []
  #   input: |
  #     {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.d, c ↦ ξ.ρ.d.f ⟧, d ↦ ⟦ e ↦ ξ.ρ.a.c, f ↦ ⟦ Δ ⤍ 01- ⟧ ⟧ ⟧.a.b.e , λ ⤍ Package ⟧}
  #   output:
  #     object: |
  #       NOT ⟦ x ↦ ⊥, λ ⤍ Package ⟧

  # FIXME: fails
  # - name: "cross-reference + dispatch (3)"
  #   dependencies: []
  #   input: |
  #     {⟦ x ↦ ⟦ a ↦ ⟦ b ↦ ξ.ρ.d, c ↦ ξ.ρ.d ⟧, d ↦ ⟦ e ↦ ξ.ρ.a.c, f ↦ ⟦ Δ ⤍ 01- ⟧ ⟧ ⟧.a.b.e.f , λ ⤍ Package ⟧}
  #   output:
  #     object: |
  #       NOT ⟦ x ↦ ⊥, λ ⤍ Package ⟧

  # FIXME: fails
  # - name: "interleaving ρ and other dispatches"
  #   dependencies: []
  #   input: |
  #     {⟦ x ↦ ⟦ a ↦ ξ.ρ.b.ρ.c ⟧.a, b ↦ ⟦⟧, c ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧}
  #   output:
  #     object: |
  #       NOT ⟦ x ↦ ⟦ ⟧.ρ.b.ρ.c, b ↦ ⟦ ⟧, c ↦ ⟦ Δ ⤍ 01- ⟧, λ ⤍ Package ⟧

  - name: "Dataize in siblings of Package"
    dependencies:
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        org ↦ ⟦
          eolang ↦ ⟦
            bool ↦ ⟦ α0 ↦ ∅, φ ↦ ξ.α0 ⟧,
            x ↦ ⟦
              φ ↦ Φ.org.eolang.bool(
                α0 ↦ Φ.org.eolang.bytes(Δ ⤍ 01-)
              )
            ⟧,
            z ↦ ⟦
              y ↦ ⟦
                x ↦ ∅,
                φ ↦ ξ.x
              ⟧,
              φ ↦ Φ.org.eolang.bool(
                α0 ↦ Φ.org.eolang.bytes(Δ ⤍ 01-)
              )
            ⟧,
            λ ⤍ Package
          ⟧,
          λ ⤍ Package
        ⟧,
        λ ⤍ Package
      ⟧}
    output:
      object: |
        ⟦
          org ↦ ⟦
            eolang ↦ ⟦
              bool ↦ ⟦ α0 ↦ ∅, φ ↦ ξ.α0 ⟧,
              x ↦ ⟦ Δ ⤍ 01- ⟧,
              z ↦ ⟦ Δ ⤍ 01- ⟧,
              λ ⤍ Package
            ⟧,
            λ ⤍ Package
          ⟧,
          λ ⤍ Package
        ⟧

  - name: "int times and plus"
    dependencies:
      - ./data/0.38.0/org/eolang/int.phi
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        φ ↦ ⟦
          x ↦ ⟦
            x ↦ ⟦ Δ ⤍ 09- ⟧,
            ρ ↦ ⟦ Δ ⤍ 04- ⟧,
            λ ⤍ Lorg_eolang_int_times
          ⟧,
          ρ ↦ ⟦ Δ ⤍ 06- ⟧,
          λ ⤍ Lorg_eolang_int_plus
        ⟧
      ⟧}
    output:
      bytes: "00-00-00-00-00-00-00-2A" # == 42

  - name: "int greater than"
    dependencies:
      - ./data/0.38.0/org/eolang/int.phi
      - ./data/0.38.0/org/eolang/bytes.phi
      - ./data/0.38.0/org/eolang/false.phi
      - ./data/0.38.0/org/eolang/true.phi
    input: |
      {⟦
        φ ↦ ⟦
          ρ ↦ ⟦ Δ ⤍ 06- ⟧,
          x ↦ ⟦ Δ ⤍ 09- ⟧,
          λ ⤍ Lorg_eolang_int_gt
        ⟧
      ⟧}
    output:
      bytes: "00-"

  # Missing int tests: div

  - name: "bitwise and"
    dependencies:
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        φ ↦ ⟦
          b ↦ ⟦ Δ ⤍ 15- ⟧,
          ρ ↦ ⟦ Δ ⤍ 0D- ⟧,
          λ ⤍ Lorg_eolang_bytes_and
        ⟧
      ⟧}
    output:
      bytes: "00-00-00-00-00-00-00-05"

  - name: "bitwise not"
    dependencies:
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        φ ↦ ⟦
          ρ ↦ ⟦ Δ ⤍ 50-3D-10-C0-6F-12-42-69 ⟧,
          λ ⤍ Lorg_eolang_bytes_not
        ⟧
      ⟧}
    output:
      bytes: "AF-C2-EF-3F-90-ED-BD-96"

  - name: "bytes size"
    dependencies:
      - ./data/0.38.0/org/eolang/int.phi
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        φ ↦ ⟦
          ρ ↦ ⟦ Δ ⤍ 00-11-22-33-44 ⟧,
          λ ⤍ Lorg_eolang_bytes_size
        ⟧
      ⟧}
    output:
      bytes: "00-00-00-00-00-00-00-05"

  - name: "bytes shift and equal"
    dependencies:
      - ./data/0.38.0/org/eolang/bytes.phi
      - ./data/0.38.0/org/eolang/true.phi
      - ./data/0.38.0/org/eolang/false.phi
    input: |
      {⟦
        φ ↦ ⟦
          ρ ↦ ⟦ Δ ⤍ 02-24-46-68-8A-AC-CE-F1 ⟧,
          b ↦ ⟦
            ρ ↦ ⟦ Δ ⤍ 11-22-33-44-55-66-77-88 ⟧,
            x ↦ ⟦ Δ ⤍ 03- ⟧,
            λ ⤍ Lorg_eolang_bytes_right
          ⟧,
          λ ⤍ Lorg_eolang_bytes_eq
        ⟧
      ⟧}
    output:
      bytes: "01-"

  # Missing bytes tests: or, xor, slice, concat

  - name: "float times and plus"
    dependencies:
      - ./data/0.38.0/org/eolang/float.phi
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        φ ↦ ⟦
          x ↦ ⟦
            x ↦ ⟦ Δ ⤍ 40-14-00-00-00-00-00-00 ⟧, // == 5.0
            ρ ↦ ⟦ Δ ⤍ 40-2A-66-66-66-66-66-66 ⟧, // == 13.2
            λ ⤍ Lorg_eolang_float_times
          ⟧,
          ρ ↦ ⟦ Δ ⤍ 40-0B-5C-28-F5-C2-8F-5C ⟧, // == 3.42
          λ ⤍ Lorg_eolang_float_plus
        ⟧
      ⟧}
    output:
      bytes: "40-51-5A-E1-47-AE-14-7B" # == 69.42

  # Missing float tests: gt, div

  - name: "string slice"
    dependencies:
      - ./data/0.38.0/org/eolang/string.phi
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        φ ↦ ⟦
          start ↦ ⟦ Δ ⤍ 02- ⟧,
          len ↦ ⟦ Δ ⤍ 05- ⟧,
          ρ ↦ ⟦ Δ ⤍ 48-65-6C-6C-6F-20-77-6F-72-6C-64 ⟧, // == "Hello world"
          λ ⤍ Lorg_eolang_string_slice
        ⟧
      ⟧}
    output:
      bytes: "6C-6C-6F-20-77" # == "llo w"

  - name: "string length"
    dependencies:
      - ./data/0.38.0/org/eolang/string.phi
      - ./data/0.38.0/org/eolang/int.phi
      - ./data/0.38.0/org/eolang/bytes.phi
    input: |
      {⟦
        φ ↦ ⟦
          ρ ↦ ⟦ Δ ⤍ 48-65-6C-6C-6F-20-77-6F-72-6C-64 ⟧, // == "Hello world"
          λ ⤍ Lorg_eolang_string_length
        ⟧
      ⟧}
    output:
      bytes: "00-00-00-00-00-00-00-0B" # == 11

  # Missing malloc tests: (all)
  # Missing cage tests: (all)
  # Missing io tests: (all)
  # Other missing tests: dataized, error, seq, as_phi, rust, try
